{"version":3,"sources":["components/Navbar.js","components/IndexBreadthBlock.js","components/IndexPlotBlock.js","components/BreadthWidget.js","components/BreadthBlock.js","components/BreadthPage.js","App.js","reportWebVitals.js","index.js"],"names":["breakPoint","showDrawerBreakPoint","minimumDate","today","Date","minute","getMinutes","getHours","getFullYear","getMonth","getDate","useStyles","makeStyles","theme","toolbar","mixins","root","display","drawer","breakpoints","up","width","flexShrink","drawerPaper","backgroundColor","color","menuButton","appBar","alignItems","homeButton","marginRight","spacing","homeIcon","homeText","fontWeight","datePicker","marginLeft","maButton","maIcon","maText","drawerMAButton","drawerMAIcon","drawerMAText","textAlign","content","flexGrow","padding","icon","ResponsiveDrawer","props","classes","maTypes","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","handleClick","event","maType","maOnChange","className","Divider","style","List","map","ListItem","button","Button","value","edge","onClick","e","Typography","variant","noWrap","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","dateOnChange","maximumDate","dateObject","onChange","date","renderInput","ref","readOnly","placeholder","year","String","month","padStart","day","fontSize","border","outline","inputPlaceholder","dateString","shouldHighlightWeekends","Hidden","xsUp","implementation","Drawer","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","inner_block_ma","borderLeft","height","inner_block_info","ma_text","marginBottom","title","CustomBarLabel","payload","x","y","fill","textAnchor","dx","dy","IndexBreadthBlock","ma_bar_data","data","type","index_value","info","index_change","index_change_p","Grid","item","xs","md","justify","wrap","gutterBottom","toFixed","ResponsiveContainer","BarChart","barCategoryGap","layout","margin","top","right","left","bottom","XAxis","stroke","hide","domain","YAxis","dataKey","tickFormatter","name","toUpperCase","Tooltip","contentStyle","labelStyle","itemStyle","labelFormatter","formatter","Bar","background","marginTop","label","Cell","Example","AreaChart","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","angle","Area","fillOpacity","BreadthWidget","entry","breadth","lg","category","minHeight","ma_block","title_block","BreadthBlock","index","BASE_URL","TECH_KEYS","TRAD_KEYS","ALL_KEYS","paddingLeft","paddingRight","error_block","error","BreadthPage","setError","isLoaded","setIsLoaded","data_all","setAllData","data_tech","setTechData","data_trad","setTradData","checked","setChecked","index_info","setIndexInfo","index_month","setIndexMonth","useEffect","prev","fetch","then","response","console","log","status","json","Error","result","hasOwnProperty","call","arr_tech","key","parseFloat","arr_trad","arr_all","message","Fragment","Fade","in","minWidth","App","inputDateString","setDateObject","setMAType","setDateString","handleDateChange","newDate","handleMAChange","newMA","Navbar","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.366a7585.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import 'react-modern-calendar-datepicker/lib/DatePicker.css';\r\n// import DatePicker from 'react-modern-calendar-datepicker';\r\nimport '@hassanmojab/react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport DatePicker from '@hassanmojab/react-modern-calendar-datepicker';\r\n\r\nconst drawerWidth = 200;\r\nconst breakPoint = 'md';\r\nconst showDrawerBreakPoint = 'xs';\r\nconst minimumDate = {\r\n    \"year\": 2021,\r\n    \"month\": 1,\r\n    \"day\": 1,\r\n};\r\nlet today = new Date();\r\nlet minute = today.getMinutes();\r\nlet hour = today.getHours() * 100;\r\nlet time = hour + minute\r\n\r\ntoday = {\r\n    \"year\": today.getFullYear(),\r\n    \"month\": today.getMonth() + 1,\r\n    \"day\": time >= 1730 ? today.getDate() - 1 : today.getDate() - 1,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: theme.mixins.toolbar,\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(showDrawerBreakPoint)]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n            display: 'none',\r\n        },\r\n    },\r\n    drawerPaper: {\r\n        backgroundColor: '#060a12',\r\n        width: drawerWidth,\r\n        color: 'rgba(255, 255, 255, 0.87)'\r\n    },\r\n\r\n    menuButton: {\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#060a12',\r\n        alignItems: 'center',\r\n    },\r\n    homeButton: {\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            marginRight: theme.spacing(4),\r\n            // marginLeft: theme.spacing(24),\r\n        },\r\n        marginRight: theme.spacing(0),\r\n        marginLeft: theme.spacing(0),\r\n        // marginLeft: 'auto',\r\n    },\r\n    homeIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    homeText: {\r\n        fontWeight: 700,\r\n    },\r\n    datePicker: {\r\n        [theme.breakpoints.up(showDrawerBreakPoint)]: {\r\n            display: 'none',\r\n        },\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            display: 'block',\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n    maButton: {\r\n        [theme.breakpoints.up(showDrawerBreakPoint)]: {\r\n            display: 'none',\r\n        },\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            display: 'block',\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n        marginRight: theme.spacing(0),\r\n        marginLeft: theme.spacing(0),\r\n    },\r\n    maIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    maText: {\r\n        fontWeight: 500,\r\n    },\r\n    drawerMAButton: {\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n        marginRight: theme.spacing(0),\r\n        marginLeft: theme.spacing(0),\r\n    },\r\n    drawerMAIcon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    drawerMAText: {\r\n        textAlign: 'left',\r\n        fontWeight: 500,\r\n    },\r\n\r\n    content: {\r\n        color: 'white',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n    },\r\n}));\r\n\r\n\r\nfunction ResponsiveDrawer(props) {\r\n    const classes = useStyles();\r\n    const maTypes = ['ma5', 'ma10', 'ma20', 'ma60'];\r\n    const { window } = props;\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    function handleDrawerToggle() {\r\n        setMobileOpen(!mobileOpen);\r\n    }\r\n\r\n    function handleClick(event, maType) {\r\n        props.maOnChange(maType);\r\n    }\r\n\r\n    const handleDateChange = (date) => {\r\n        props.dateOnChange(date);\r\n    };\r\n\r\n    const handleHomeClick = () => {\r\n        props.dateOnChange(today);\r\n    };\r\n\r\n    const renderCustomInput = ({ ref }) => (\r\n        <input\r\n            readOnly\r\n            ref={ref} // necessary\r\n            placeholder=\"custom input\"\r\n            // value={selectedDate ? `✅: ${selectedDate.year}/${selectedDate.month}/${selectedDate.day}` : ''}\r\n            value={`${props.dateObject.year}/${String(props.dateObject.month).padStart(2, '0')}/${String(props.dateObject.day).padStart(2, '0')}`}\r\n            style={{\r\n                marginLeft: 'auto',\r\n                width: 150,\r\n                textAlign: 'center',\r\n                padding: 4,\r\n                fontWeight: 500,\r\n                fontSize: '1.1rem',\r\n                border: '0px solid #9c88ff',\r\n                // borderRadius: '100px',\r\n                // boxShadow: '0 1.5rem 2rem rgba(156, 136, 255, 0.2)',\r\n                color: 'rgba(50, 200, 200, 0.87)',\r\n                backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n                outline: 'none',\r\n            }}\r\n            className=\"my-custom-input-class\" // a styling class\r\n        />\r\n    );\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider style={{ backgroundColor: 'rgba(255,255,255,0.3)' }} />\r\n            <List>\r\n                {\r\n                    maTypes.map((maType) => {\r\n                        return <ListItem button key={maType}>\r\n                            <Button\r\n                                value={maType}\r\n                                style={{\r\n                                    color: maType === props.maType ?\r\n                                        'rgba(50, 200, 200, 0.87)' :\r\n                                        'rgba(255, 255, 255, 0.6)'\r\n                                }}\r\n                                color=\"inherit\"\r\n                                edge=\"start\"\r\n                                className={classes.drawerMAButton}\r\n                                onClick={(e) => handleClick(e, maType)}\r\n                            >\r\n                                <Typography variant=\"subtitle1\" noWrap className={classes.drawerMAText}>\r\n                                    {maType}\r\n                                </Typography>\r\n                            </Button></ListItem>\r\n                    })\r\n                }\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                    <Button\r\n                        color=\"inherit\"\r\n                        edge=\"start\"\r\n                        className={classes.homeButton}\r\n                        onClick={handleHomeClick}\r\n                    >\r\n                        <TimelineIcon className={classes.homeIcon} />\r\n                        <Typography variant=\"h6\" noWrap className={classes.homeText}>\r\n                            台股市場寬度圖\r\n                        </Typography>\r\n                    </Button>\r\n                    <div className={classes.datePicker}>\r\n                        <DatePicker\r\n                            minimumDate={minimumDate}\r\n                            maximumDate={today}\r\n                            value={props.dateObject}\r\n                            onChange={handleDateChange}\r\n                            renderInput={renderCustomInput}\r\n                            inputPlaceholder={props.dateString}\r\n                            // disabledDays={DISABLEDDAYS}\r\n                            shouldHighlightWeekends\r\n                        />\r\n                    </div>\r\n                    {\r\n                        maTypes.map((maType) => {\r\n                            return <Button\r\n                                value={maType}\r\n                                key={maType}\r\n                                style={{\r\n                                    color: maType === props.maType ?\r\n                                        'rgba(50, 200, 200, 0.87)' :\r\n                                        'rgba(255, 255, 255, 0.6)'\r\n                                }}\r\n                                color=\"inherit\"\r\n                                edge=\"start\"\r\n                                className={classes.maButton}\r\n                                onClick={(e) => handleClick(e, maType)}\r\n                            >\r\n                                <Typography variant=\"subtitle1\" noWrap className={classes.maText}>\r\n                                    {maType}\r\n                                </Typography>\r\n                            </Button>\r\n                        })\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden xsUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { BarChart, Bar, Cell, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(3),\r\n        },\r\n        // padding: theme.spacing(3),\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.03)'\r\n    },\r\n    inner_block_ma: {\r\n        textAlign: 'left',\r\n        borderLeft: '1px solid rgba(255, 255, 255, 0.2)',\r\n        color: 'white',\r\n        height: 167\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.2)'\r\n    },\r\n    inner_block_info: {\r\n        // textAlign: 'center',\r\n        // justify: \"center\",\r\n        // borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n        color: 'white',\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.2)'\r\n    },\r\n    ma_text: {\r\n        // marginLeft: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        // [theme.breakpoints.up('sm')]: {\r\n        //     marginLeft: theme.spacing(4)\r\n        // },\r\n    },\r\n    title: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n);\r\n\r\n\r\nconst CustomBarLabel = ({ payload, x, y, value }) => {\r\n    return <text x={x} y={y}\r\n        fill=\"rgba(255, 255, 255, 0.87)\"\r\n        textAnchor=\"middle\"\r\n        dx={135} dy={13}\r\n    >\r\n        {/*<Typography>*/}\r\n        {value + '%'}\r\n        {/*</Typography>*/}\r\n    </text>;\r\n};\r\n\r\nfunction IndexBreadthBlock(props) {\r\n    const classes = useStyles();\r\n    const ma_bar_data = props.data ? ['ma5', 'ma10', 'ma20', 'ma60',].map((type) => {\r\n        return { \"type\": type, \"val\": props.data[type] };\r\n    }) : [];\r\n    let index_value = props.info['close'];\r\n    let index_change = props.info['change'];\r\n    let index_change_p = props.info['pct_change'];\r\n\r\n    return (\r\n        <Grid container spacing={2} className={classes.root}>\r\n            <Grid container item xs={12} md={5}>\r\n                <Grid container item xs={12} justify=\"center\" wrap=\"nowrap\"\r\n                    alignItems=\"center\" className={classes.inner_block_info}>\r\n                    <Typography variant=\"h4\" gutterBottom className={classes.title}>\r\n                        大盤\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\" wrap=\"nowrap\"\r\n                    alignItems=\"center\" className={classes.inner_block_info}>\r\n                    <Typography variant=\"h5\" gutterBottom style={(index_change < 0) ?\r\n                        { color: 'rgba(0, 255, 0, 0.587)' } :\r\n                        { color: 'rgba(255, 30, 30, 0.587)' }}>\r\n                        {index_value !== undefined ? index_value : -1}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\" wrap=\"nowrap\"\r\n                    alignItems=\"center\" className={classes.inner_block_info}>\r\n                    <Typography variant=\"h5\" gutterBottom style={(index_change < 0) ?\r\n                        { color: 'rgba(0, 255, 0, 0.587)' } :\r\n                        { color: 'rgba(255, 30, 30, 0.587)' }}>\r\n                        {index_change !== undefined ? index_change : -1}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container item xs={12} justify=\"center\" wrap=\"nowrap\"\r\n                    alignItems=\"center\" className={classes.inner_block_info}>\r\n                    <Typography variant=\"h5\" gutterBottom style={(index_change < 0) ?\r\n                        { color: 'rgba(0, 255, 0, 0.587)' } :\r\n                        { color: 'rgba(255, 30, 30, 0.587)' }}>\r\n                        {index_change_p !== undefined ? index_change_p.toFixed(2) + '%' : -1}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container alignItems=\"center\" item xs={12} md={7}>\r\n                <Grid item xs={12} className={classes.inner_block_ma}>\r\n                    <ResponsiveContainer>\r\n                        <BarChart\r\n                            barCategoryGap={10}\r\n                            // maxBarSize={20}\r\n                            width={250}\r\n                            height={147}\r\n                            data={props.data ? ma_bar_data : []}\r\n                            layout=\"vertical\"\r\n                            margin={{ top: 10, right: 0, left: 0, bottom: 10 }}\r\n                        >\r\n                            <XAxis type=\"number\"\r\n                                stroke={\"rgba(255, 255, 255, 0.87)\"}\r\n                                hide={true}\r\n                                domain={[0, 100]}\r\n                            />\r\n                            <YAxis type=\"category\"\r\n                                dataKey={'type'}\r\n                                stroke={\"rgba(255, 255, 255, 0.87)\"}\r\n                                tickFormatter={(value, name, props) => (value ? value.toUpperCase() : value)}\r\n                            />\r\n                            <Tooltip contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.87)', color: 'black' }}\r\n                                labelStyle={{ color: 'black' }}\r\n                                itemStyle={{ color: 'black' }}\r\n                                labelFormatter={(name) => name ? name.toUpperCase() : name}\r\n                                formatter={(value, name, props) => ([value + \"%\"])}\r\n                            />\r\n                            <Bar dataKey=\"val\"\r\n                                background={{ fill: 'rgba(255, 255, 255, 0.587)' }}\r\n                                style={{ marginTop: 100 }}\r\n                                label={CustomBarLabel}\r\n                            >\r\n\r\n                                {\r\n                                    props.data ? ['ma5', 'ma10', 'ma20', 'ma60',].map((type) => {\r\n                                        return <Cell key={type} fill={\r\n                                            (props.data[type] > 50) ?\r\n                                                `rgba(255,\r\n                                                ${255 - (props.data[type] - 50) / 50 * 255},\r\n                                                ${255 - (props.data[type] - 50) / 50 * 255}, 0.5)`\r\n                                                :\r\n                                                `rgba(${(props.data[type]) / 50 * 255},\r\n                                                255,\r\n                                                ${(props.data[type]) / 50 * 255}, 0.5)`\r\n                                        }\r\n                                        />;\r\n                                    }) : 0\r\n                                }\r\n                            </Bar>\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default IndexBreadthBlock;\r\n\r\n","import React from 'react';\r\nimport {\r\n    AreaChart, Area, XAxis, YAxis, Tooltip, ResponsiveContainer,\r\n} from 'recharts';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.03)'\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    inner_block_ma: {\r\n        textAlign: 'left',\r\n        borderLeft: '1px solid rgba(255, 255, 255, 0.2)',\r\n        color: 'white',\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.2)'\r\n    },\r\n    inner_block_info: {\r\n        // textAlign: 'center',\r\n        // justify: \"center\",\r\n        // borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n        color: 'white',\r\n        // backgroundColor: 'rgba(255, 255, 255, 0.2)'\r\n    },\r\n    ma_text: {\r\n        // marginLeft: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        // [theme.breakpoints.up('sm')]: {\r\n        //     marginLeft: theme.spacing(4)\r\n        // },\r\n    },\r\n    title: {\r\n        fontWeight: 700,\r\n    },\r\n})\r\n);\r\n\r\nexport default function Example(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container spacing={2} className={classes.root}>\r\n            <ResponsiveContainer width=\"100%\" height={287}>\r\n                <AreaChart width={500}\r\n                    height={300}\r\n                    data={props.data}\r\n                    margin={{\r\n                        top: 5, right: 0, left: 0, bottom: 5,\r\n                    }}>\r\n                    <defs>\r\n                        <linearGradient id=\"colorValue\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                            <stop offset=\"0%\" stopColor=\"rgba(102, 207, 255, 0.87)\" stopOpacity={0.87} />\r\n                            <stop offset=\"94.87%\" stopColor=\"rgba(102, 207, 255, 0.87)\" stopOpacity={0} />\r\n                        </linearGradient>\r\n                    </defs>\r\n                    <XAxis dataKey=\"date\"\r\n                        angle={0}\r\n                        stroke={\"rgba(255, 255, 255, 0.87)\"}\r\n                    />\r\n                    <YAxis\r\n                        hide={true}\r\n                        domain={['dataMin - 200', 'dataMax + 200']}\r\n                        stroke={\"rgba(255, 255, 255, 0.87)\"}\r\n                    />\r\n                    {/*<CartesianGrid strokeDasharray=\"20 20\"/>*/}\r\n                    <Tooltip contentStyle={{ backgroundColor: 'rgba(255, 255, 255, 0.87)', color: 'black' }}\r\n                        labelStyle={{ color: 'black' }}\r\n                        itemStyle={{ color: 'black' }}\r\n                        labelFormatter={(name) => name ? name.toUpperCase() : name}\r\n                        formatter={(value, name, props) => ([value])}\r\n                    />\r\n                    <Area type=\"monotone\"\r\n                        dataKey=\"收盤指數\"\r\n                        stroke=\"rgba(102, 207, 255, 0.87)\"\r\n                        fillOpacity={1}\r\n                        fill=\"url(#colorValue)\" />\r\n                </AreaChart>\r\n            </ResponsiveContainer>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: 'white',\r\n        },\r\n    })\r\n);\r\n\r\n\r\nfunction BreadthWidget(props) {\r\n    const classes = useStyles();\r\n    // const [checked, setChecked] = React.useState(false);\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log('switch');\r\n    //     setChecked((prev) => !prev);\r\n    //     setChecked((prev) => !prev);\r\n    // }, [props.entry]);\r\n\r\n    return (\r\n        // <Fade in={checked}>\r\n            <Grid container justify=\"center\" wrap=\"wrap\"\r\n                  alignItems=\"center\"\r\n                  style={{\r\n                      backgroundColor:\r\n                          (props.entry.breadth > 50) ?\r\n                              `rgba(255,\r\n                          ${255 - (props.entry.breadth - 50) / 50 * 255},\r\n                          ${255 - (props.entry.breadth - 50) / 50 * 255}, 0.3)`\r\n                              :\r\n                              `rgba(${(props.entry.breadth) / 50 * 255},\r\n                          255,\r\n                          ${(props.entry.breadth) / 50 * 255}, 0.3)`\r\n                  }}\r\n                  item\r\n                  xs={6} md={4} lg={3}\r\n                  className={classes.root}\r\n                  direction={'row'}\r\n            >\r\n                <Grid item xs={12}>\r\n                    <Typography variant='subtitle2'>\r\n                        {props.entry.category}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{minHeight: 25.487}}>\r\n                    <Typography variant='h6'>\r\n                        {props.entry.breadth}%\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        // </Fade>\r\n    )\r\n}\r\n\r\n\r\nexport default BreadthWidget;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BreadthWidget from './BreadthWidget'\r\n\r\n// import Fade from '@material-ui/core/Fade';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            padding: theme.spacing(2),\r\n            [theme.breakpoints.up('md')]: {\r\n                padding: theme.spacing(3),\r\n            },\r\n            // padding: theme.spacing(3),\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            // backgroundColor: 'rgba(255, 255, 255, 0.03)'\r\n        },\r\n        ma_block: {\r\n            minHeight: 287,\r\n            padding: 0\r\n        },\r\n        title_block: {\r\n            color: 'white',\r\n            // backgroundColor: 'rgba(255, 255, 255, 0.03)'\r\n        },\r\n        title: {\r\n            fontWeight: 700,\r\n        },\r\n    })\r\n);\r\n\r\n\r\nfunction BreadthBlock(props) {\r\n    const classes = useStyles();\r\n    // const [checked, setChecked] = React.useState(false);\r\n    // React.useEffect(() => {\r\n    //     console.log('switch');\r\n    //     setChecked((prev) => !prev);\r\n    // }, [props.data]);\r\n    return (\r\n        //<Fade in={checked}>\r\n        <Grid container spacing={2} className={classes.root}>\r\n            <Grid container item xs={12} justify=\"center\" wrap=\"nowrap\"\r\n                  alignItems=\"center\" className={classes.title_block}>\r\n                <Typography variant=\"h4\" className={classes.title}>\r\n                    {props.title}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid container direction={'row'} item xs={12} className={classes.ma_block}>\r\n                {\r\n                    props.data.map((entry, index) => {\r\n                        return <BreadthWidget key={index} entry={entry}/>\r\n                    })\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n        //</Fade>\r\n    )\r\n}\r\n\r\nexport default BreadthBlock;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IndexBreadthBlock from './IndexBreadthBlock'\r\nimport IndexPlotBlock from './IndexPlotBlock'\r\nimport BreadthBlock from './BreadthBlock'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport '@hassanmojab/react-modern-calendar-datepicker/lib/DatePicker.css';\r\nimport DatePicker from '@hassanmojab/react-modern-calendar-datepicker';\r\n\r\nconst BASE_URL = \"https://yirueilu.pythonanywhere.com/\"\r\nconst TECH_KEYS = ['電子零組件業', '電機機械', '電器電纜', '電腦及週邊設備業', '半導體業', '其他電子業', '通信網路業', '光電業', '電子通路業', '資訊服務業',];\r\nconst TRAD_KEYS = ['水泥工業', '食品工業', '塑膠工業', '建材營造業', '汽車工業', '其他業', '紡織纖維', '貿易百貨業', '生技醫療業', '化學工業', '玻璃陶瓷', '造紙工業', '鋼鐵工業', '橡膠工業', '航運業', '油電燃氣業', '觀光事業', '金融保險業'];\r\nconst ALL_KEYS = ['大盤',];\r\nconst breakPoint = 'md';\r\nconst showDrawerBreakPoint = 'xs';\r\nconst minimumDate = {\r\n    \"year\": 2021,\r\n    \"month\": 1,\r\n    \"day\": 1,\r\n};\r\nlet today = new Date();\r\nlet minute = today.getMinutes();\r\nlet hour = today.getHours() * 100;\r\nlet time = hour + minute\r\n\r\ntoday = {\r\n    \"year\": today.getFullYear(),\r\n    \"month\": today.getMonth() + 1,\r\n    \"day\": time >= 1730 ? today.getDate() - 1 : today.getDate() - 1,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: 40,\r\n        [theme.breakpoints.up('md')]: {\r\n            marginTop: 0,\r\n            padding: 80,\r\n        },\r\n        [theme.breakpoints.up('xl')]: {\r\n            marginTop: 0,\r\n            paddingLeft: '15vw',\r\n            paddingRight: '15vw',\r\n        },\r\n        minHeight: '100vh'\r\n    },\r\n    error_block: {\r\n        marginTop: 30,\r\n    },\r\n    error: {\r\n        color: 'rgba(187,187,187,0.4878)',\r\n        fontWeight: 600,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    datePicker: {\r\n        textAlign: 'center',\r\n        [theme.breakpoints.up(showDrawerBreakPoint)]: {\r\n            display: 'block',\r\n        },\r\n        [theme.breakpoints.up(breakPoint)]: {\r\n            display: 'none',\r\n            marginRight: theme.spacing(1),\r\n            marginLeft: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nfunction BreadthPage(props) {\r\n    const classes = useStyles();\r\n    const [error, setError] = React.useState(null);\r\n    const [isLoaded, setIsLoaded] = React.useState(false);\r\n    const [data_all, setAllData] = React.useState([]);\r\n    const [data_tech, setTechData] = React.useState([]);\r\n    const [data_trad, setTradData] = React.useState([]);\r\n    const [checked, setChecked] = React.useState(true);\r\n    const [index_info, setIndexInfo] = React.useState({});\r\n    const [index_month, setIndexMonth] = React.useState([]);\r\n\r\n\r\n    const handleDateChange = (date) => {\r\n        props.dateOnChange(date);\r\n    };\r\n    const renderCustomInput = ({ ref }) => (\r\n        <input\r\n            readOnly\r\n            ref={ref} // necessary\r\n            placeholder=\"custom input\"\r\n            // value={selectedDate ? `✅: ${selectedDate.year}/${selectedDate.month}/${selectedDate.day}` : ''}\r\n            // value={`${selectedDate.year}/${String(selectedDate.month).padStart(2, '0')}/${String(selectedDate.day).padStart(2, '0')}`}\r\n            value={`${props.dateObject.year}/${String(props.dateObject.month).padStart(2, '0')}/${String(props.dateObject.day).padStart(2, '0')}`}\r\n            style={{\r\n                marginLeft: 'auto',\r\n                width: 150,\r\n                textAlign: 'center',\r\n                padding: 4,\r\n                fontWeight: 500,\r\n                fontSize: '1.1rem',\r\n                border: '0px solid #9c88ff',\r\n                // borderRadius: '100px',\r\n                // boxShadow: '0 1.5rem 2rem rgba(156, 136, 255, 0.2)',\r\n                color: 'rgba(50, 200, 200, 0.87)',\r\n                backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n                outline: 'none',\r\n            }}\r\n            className=\"my-custom-input-class\" // a styling class\r\n        />\r\n    );\r\n    React.useEffect(() => {\r\n        setChecked((prev) => !prev);\r\n        // setChecked((prev) => !prev);\r\n        fetch(BASE_URL + props.dateString)\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Network response was not ok.');\r\n            })\r\n            .then((result) => {\r\n                // console.log(result)\r\n                if (hasOwnProperty.call(result, 'ERROR')) {\r\n                    console.log(hasOwnProperty.call(result, 'ERROR'));\r\n                    return\r\n                }\r\n                let arr_tech = TECH_KEYS.map(key => {\r\n                    return {\r\n                        \"category\": key,\r\n                        // \"breadth\": Math.round(result[key]['summary'][props.selectedMA] * 100) / 100\r\n                        \"breadth\": parseFloat(result[key]['summary'][props.maType].toFixed(2))\r\n                    };\r\n                });\r\n                let arr_trad = TRAD_KEYS.map(key => {\r\n                    return {\r\n                        \"category\": key,\r\n                        // \"breadth\": Math.round(result[key]['summary'][props.selectedMA] * 100) / 100\r\n                        \"breadth\": parseFloat(result[key]['summary'][props.maType].toFixed(2))\r\n                    };\r\n                });\r\n                let arr_all = ALL_KEYS.map(key => {\r\n                    return {\r\n                        \"category\": key,\r\n                        \"ma5\": parseFloat(result[key]['summary']['ma5'].toFixed(2)),\r\n                        \"ma10\": parseFloat(result[key]['summary']['ma10'].toFixed(2)),\r\n                        \"ma20\": parseFloat(result[key]['summary']['ma20'].toFixed(2)),\r\n                        \"ma60\": parseFloat(result[key]['summary']['ma60'].toFixed(2))\r\n                    };\r\n                });\r\n                setIsLoaded(true);\r\n                setTechData(arr_tech);\r\n                setTradData(arr_trad);\r\n                setAllData(arr_all);\r\n            },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            ).then(() => setChecked((prev) => !prev));\r\n\r\n        fetch(BASE_URL + \"index-info-\" + props.dateString)\r\n            .then(function (response) {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Network response was not ok.');\r\n            })\r\n            .then((result) => {\r\n                setIndexInfo(result);\r\n                setIsLoaded(true);\r\n            },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n        fetch(BASE_URL + \"index-month\")\r\n            .then(function (response) {\r\n                if (response.status === 200) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Network response was not ok.');\r\n            })\r\n            .then((result) => {\r\n                setIndexMonth(result);\r\n                setIsLoaded(true);\r\n            },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }, [props.maType, props.dateObject, props.dateString]);\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <Grid container spacing={3} className={classes.root} justify=\"center\" alignItems=\"center\">\r\n                <Grid container item xs={12} className={classes.datePicker} justify=\"center\" alignItems=\"center\">\r\n                    <DatePicker\r\n                        minimumDate={minimumDate}\r\n                        maximumDate={today}\r\n                        value={props.dateObject}\r\n                        onChange={handleDateChange}\r\n                        renderInput={renderCustomInput}\r\n                        inputPlaceholder={props.dateString}\r\n                        // TODO: Set disable days by calling API\r\n                        // disabledDays={DISABLEDDAYS}\r\n                        shouldHighlightWeekends\r\n                    />\r\n                </Grid>\r\n                {index_info['close'] !== undefined ?\r\n                    <React.Fragment>\r\n                        <Grid container item xs={12} lg={5}>\r\n                            <IndexBreadthBlock data={data_all[0]} info={index_info} />\r\n                        </Grid>\r\n                        <Grid item xs={12} lg={7}>\r\n                            <IndexPlotBlock data={index_month} />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider style={{ backgroundColor: 'rgba(255,255,255,0.3)' }} />\r\n                        </Grid>\r\n\r\n                        <Fade in={checked}>\r\n                            <Grid item xs={12}>\r\n                                <BreadthBlock data={data_tech} title={\"科技產業\"} />\r\n                            </Grid>\r\n                        </Fade>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider style={{ backgroundColor: 'rgba(255,255,255,0.3)' }} />\r\n                        </Grid>\r\n\r\n                        <Fade in={checked}>\r\n                            <Grid item xs={12}>\r\n                                <BreadthBlock data={data_trad} title={\"傳統產業\"} />\r\n                            </Grid>\r\n                        </Fade>\r\n                    </React.Fragment> :\r\n                    <React.Fragment>\r\n                        <Fade in={checked}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container item xs={12} justify=\"center\"\r\n                                    alignItems=\"center\" className={classes.error_block}>\r\n                                    <Typography variant=\"h4\" gutterBottom className={classes.error}>\r\n                                        查無 {index_info[\"ERROR\"]} 之資料，請嘗試其他日期\r\n                                    </Typography>\r\n                                    <Typography variant=\"h4\" gutterBottom className={classes.error}>\r\n                                        Oops! Data not found, {index_info[\"ERROR\"]} is not a valid date. Please try another date.\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Fade>\r\n                    </React.Fragment>}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BreadthPage;\r\n\r\n","// import logo from './logo.svg';\n// {/*<img src={logo} className=\"App-logo\" alt=\"logo\"/>*/}\nimport './App.css';\nimport React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport Navbar from './components/Navbar'\nimport BreadthPage from './components/BreadthPage'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: '#282c34',\n        flexGrow: 1,\n        padding: 30,\n        minWidth: '100vw',\n        minHeight: '100vh'\n    },\n}));\n\n\nfunction App() {\n    let today = new Date();\n    let minute = today.getMinutes();\n    let hour = today.getHours() * 100;\n    let time = hour + minute\n\n    today = {\n        \"year\": 2021,\n        \"month\": 2,\n        \"day\": 22,\n//        \"year\": today.getFullYear(),\n//        \"month\": today.getMonth() + 1,\n//        \"day\": time >= 1730 ? today.getDate() - 1 : today.getDate() - 1,\n    };\n    let inputDateString = String(today['year']) +\n        String(today['month']).padStart(2, '0') +\n        String(today['day']).padStart(2, '0');\n    const classes = useStyles();\n    const [dateObject, setDateObject] = React.useState(today);\n    const [maType, setMAType] = React.useState(\"ma20\");\n    const [dateString, setDateString] = React.useState(inputDateString);\n\n    function handleDateChange(newDate) {\n        let inputDateString = String(newDate['year']) +\n            String(newDate['month']).padStart(2, '0') +\n            String(newDate['day']).padStart(2, '0');\n        setDateObject(newDate);\n        setDateString(inputDateString)\n    }\n    function handleMAChange(newMA) {\n        setMAType(newMA);\n    }\n\n    React.useEffect(() => {\n\n    }, []);\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Navbar dateOnChange={handleDateChange} dateObject={dateObject} dateString={dateString} maOnChange={handleMAChange} maType={maType} />\n            <Container className={classes.root}>\n                <BreadthPage dateOnChange={handleDateChange} dateObject={dateObject} dateString={dateString} maOnChange={handleMAChange} maType={maType} />\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}